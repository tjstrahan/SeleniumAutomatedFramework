<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>Academy</groupId>
  <artifactId>Project</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>Project</name>
  <url>http://maven.apache.org</url>
  
  <build>
  
  <!-- Putting this block in your pom xml lets Maven now that your log4j file is stored in your resources folder in Eclipse
  and Maven can access from there MAKE SURE FILE PATH IS CORRECT OTHERWISE LOG4J WONT BE ACCESSED BY MAVEN!!!!!!!!!
  Once you have this in pom then go to cmd line run mvn compile, mvn test and then when you refresh project in Eclipse
  log folder should appear with prints.lod in ityou need to add 
  
  
  Get the code blocks from https://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html
   -->
  <resources>
  <resource>
        <directory>src/main/java/resources</directory>
        <filtering>true</filtering>
        </resource>
      </resources>
  
  <plugins>
   
   <!--Get theis block of code from https://maven.apache.org/surefire/maven-surefire-plugin/examples/testng.html under
   'Using Suite XML files'
   
    This block of code says to the pom go and run the testng xml suite in this case it is at project level so no need to change 
    <suiteXmlFile>testng.xml</suiteXmlFile> Maven will then go to testng file and trigger the four test cases-->
    
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.0</version>
        <configuration>
          <suiteXmlFiles>
            <suiteXmlFile>testng.xml</suiteXmlFile>
          </suiteXmlFiles>
        </configuration>
      </plugin>
    

</plugins>
  
  
  </build>
  
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    
   
    <dependency>
       <groupId>org.seleniumhq.selenium</groupId>
       <artifactId>selenium-java</artifactId>
       <version>3.14.0</version>
      <scope>test</scope>
    </dependency>
    
    
      <!-- https://mvnrepository.com/artifact/org.testng/testng -->
<dependency>
    <groupId>org.testng</groupId>
    <artifactId>testng</artifactId>
    <version>6.14.3</version>
    <scope>test</scope>
</dependency>

<!-- Following two blocks of code are dependencies for extent reports can be found at 
 http://extentreports.com/docs/versions/3/java/#maven-->
<dependency>
    <groupId>com.aventstack</groupId>
    <artifactId>extentreports</artifactId>
    <version>3.1.5</version>
</dependency>

<dependency>
<groupId>com.relevantcodes</groupId>
<artifactId>extentreports</artifactId>
<version>2.41.2</version>
</dependency>

<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-api</artifactId>
    <version>2.8.2</version>
  </dependency>
  
  <dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-core</artifactId>
    <version>2.8.2</version>
  </dependency>
    
    <!-- Getting dependencies (jars) for selenium (above), testNg, REST APIs and appium as well as LOG4J--> 
    
 <dependency>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-io</artifactId>
    <version>1.3.2</version>
</dependency>
    
  </dependencies>
</project>
