<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="WARN">
<!-- Where to log and how log will look is set in Appenders tag you can specify output as 'Console' or 'File' -->

<!-- Make sure that you save your prints.log file as a seperate project level folder and not as a package within src folder so go to
project folder and right click-new folder-name it Logs and then right click on this and  create new untitled text file in 'General' option
and click untitled text file and call it prints.log to fit in  with generic path name specified in properties and rolling file tags-->

<!-- This tag will by default give the generic location of the project folder of project and go to the .logs folder you created if
several people need to locate this they will be able to as it genric location within project and not within a local machine -->

 <Properties>
<Property name="basePath">./logs</Property>
</Properties>

  <Appenders>
  
  <!-- To print log output to file so you can see file here says"File" and fileName is the path where the file will be created and 
  passes in logs with a pattern layout also specified but you can also see that console
  name is given in console name part of xml to control which one will be output go to Appenderef and enter file or console as required
  TriggeringPolicy will create a new file once first file reaches 500kb -->
  
  <RollingFile name="File" fileName="${basePath}/prints.log" filePattern="${basePath}/prints-%d{yyyy-MM-dd}.log">
     <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
      <SizeBasedTriggeringPolicy size="500" />
          </RollingFile>
          
    <Console name="Console" target="SYSTEM_OUT">
    
    <!-- Pattern layout determines how the logging layout will look of the first part of print out e.g
     11:17:53.922 [main] ERROR alpha.Demo-->
     
      <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
      
    </Console>
  </Appenders>
  
  <!-- Loggers tag decides what to log -->
  
  <Loggers>
  
  <!-- Lets say client only wants error level tags in alpha package as developers not as good here - this block of code will set alpha classes root
  level to error all  other packages will run everything ie their root level is trace
  To avoid running tests in alpha packages twice make sure the package/test which are editing out log messages/only showing error have additivity set 
  to false-->
  
  
  <!-- As this stands all logs in alpha demo will print to file and all logs in rest of logs in folder will go to console unless otherwise
   set up in xml -->
   <!-- <Logger name="alpha.Demo" level="trace" additivity="false" >
      <AppenderRef ref="File"/>
    </Logger>  -->
    
  <!-- Root l
  level decides what log messages will be printed out as you can see default is just set to error this would need to
  be set to trace to capture everything -->
  
      <Root level="trace">
      
      <!-- Appenders ref tag just reminds logger tag where to print out  -->
      
      <AppenderRef ref="File"/>
    </Root>
  </Loggers>
</Configuration>



<!-- XML format grabbed from //http://logging.apache.org/log4j/2.x/manual/configuration.html -->